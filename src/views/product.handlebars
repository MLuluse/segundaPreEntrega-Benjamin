<div class="container">
    <div class="card mb-5 col-md-6 offset-md-3">
        <div class="card-header bg-primary text-center text-white">
            <h1>{{product.title}}</h1>
            <p id="pid" data-pid="{{product._id}}">{{product._id}}</p>
        </div>
        <div class="card-body">
            <div class="mb-3"><strong>Description:</strong> {{product.description}}</div>
            <div class="mb-3"><strong>Price:</strong> {{product.price}}</div>
            <div class="mb-3"><strong>Code:</strong> {{product.code}}</div>
            <div class="mb-3"><strong>Category:</strong> {{product.category}}</div>
            <div class="mb-3"><strong>Stock:</strong> {{product.stock}}</div>
        </div>
     <a class="btn btn-primary" href="/products"> Volver a Productos </a> 
     <button class="btn btn-danger" onclick="deleteProduct('{{product._id}}')"> Borrar Producto </button> 
    </div>
    
</div>
<div class="container">
     <div class="card mb-5 col-md-6 offset-md-3">
        <div class="card-header bg-primary text-center text-white">
            <h5>ACTUALIZAR</h5>
        </div>
        <div class="card-body">
            <form id="productForm">
                <div class="mb-3">
                    <input type="text" class="form-control" id="title" placeholder="Title"  />
                </div>
                <div class="mb-3">
                    <input type="text" class="form-control" id="description" placeholder="Description"/>
                </div>
                <div class="mb-3">
                    <input type="number" class="form-control"  id="price"  placeholder="Price" />
                </div>
                <div class="mb-3">
                    <input type="text" class="form-control" id="code" placeholder="Code" />
                </div>
                <div class="mb-3">
                    <input type="text" class="form-control"  id="category" placeholder="Category"/>
                </div>
                <div class="mb-3">
                    <input type="number" class="form-control"  id="stock" placeholder="Stock" />
                </div>
                <div class="mb-3">
                    <input type="text" class="form-control"  id="thumbnail" placeholder="imagen" />
                </div>
                <div class="mb-3">
                    <input type="text" class="form-control"  id="status" placeholder="true/false" />
                </div>
            </form>
            <button class="btn btn-danger" id="updateProduct" onclick="updateProduct('{{product._id}}')"> Actualizar producto </button>
           
        </div>
    </div>
<script>
updateProduct = (pid) => {
    const form = document.getElementById('productForm');
    const formData = {       
        title: document.getElementById("title").value,
        description: document.getElementById("description").value,
        price: document.getElementById("price").value,
        code: document.getElementById("code").value,
        category: document.getElementById("category").value,
        stock: document.getElementById("stock").value,
        thumbnail: document.getElementById("thumbnail").value,
        status: document.getElementById("status").value 
        }

    // Filtrar propiedades con valores no nulos o vacíos
    const filteredFormData = Object.fromEntries(
        Object.entries(formData).filter(([_, value]) => value !== null && value !== '')
    );
    //console.log(`Filtered form data front`, filteredFormData)

    fetch(`/api/products/${pid}`, {
        method: 'put',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(filteredFormData),
        })
        .then(result => result.json())
        .then(result => {
            if (result.status === 'error') throw new Error(result.error)
            alert(`Todo salió bien! :)\nEl producto se actualizo en db`)
            window.location.href = '/products'
        })
        .catch(err => alert(`Ocurrió un error :(\n${err}`))
}

deleteProduct = (pid) => {
    fetch(`/api/products/${pid}`, {
        method: 'delete'
        })
    .then(result => result.json())
    .then(result => {
        if (result.status === 'error') throw new Error(result.error)
        alert(`Todo salió bien! :)\nEl producto se borro del db!`)
        window.location.href = '/products'
    })
    .catch(err => alert(`Ocurrió un error :(\n${err}`))
}

</script>