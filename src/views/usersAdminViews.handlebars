<div class="container">
    <hr>
    <div class="card">
        <div class="card-header titles-log-reg text-center text-info m-2">
            <h2>Panel de Usuarios</h2>
        </div>
    </div>
    <div class="container text-center">
        <div class="mt-5">
            <a onclick="removeInactiveUsers()" class="btn btn-secondary btn-lg btn-block">Eliminar los usarios Inactivos</a>
        </div>
    </div>
    <div>
        <a class="btn btn-primary" href="/products"> Volver </a>
    </div>
    
    <table class="table table-bordered table-striped table-hover mt-5 text-center align-middle" id="productsTable">
        <thead class="table-dark">
            <tr>
                <th>Nombre Completo</th>
                <th>Email</th>
                <th>Rol</th>
                <th>Actualizar Rol</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody id="tbody">
            {{#each users}}
                <tr>
                    <td>{{this.full_name}}</td>
                    <td>{{this.email}}</td>
                    <td>{{this.role}}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="changeRole('{{this.id}}')">Cambiar el Rol</button>
                    </td>
                    <td>
                        <button
                            class="btn btn-danger"
                            onclick="deleteUser('{{this.id}}')"
                        >
                            ❌
                        </button>
                    </td>
                </tr>
            {{/each}}
        </tbody>
    </table>
    
</div>
<script>
    removeInactiveUsers = async () => {
       try {
        const response = await fetch(`/api/users/inactiveusers`, {
            method: 'delete',
        })
    
        if (response.status === 204) {
            alert('No hay usuarios inactivos para eliminar.')
        } else {
            const result = await response.json()
            if (result.status === 'success') {
                alert(`Usuarios inactivos borrados, Recargue la página para ver los cambios`)
                window.location.reload()
            } else {
                alert(`Error: ${result.error}`)
            }
        }
    } catch (err) {
        alert(`Ocurrió un error :(\n ${err}`)
    }
    }

    changeRole = (id) => {
     fetch(`/api/users/premium/${id}` , {
            method: 'get',
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then(result => result.json())
        .then(result => {
            if (result.status === 'success') {
            alert(`Cambio su Role. Vuelva a logearse para ver los cambios`)
            window.location.reload()
        } else {
            alert(`Error: ${result.error}`)
        }
    })
    .catch(err => alert(`Ocurrió un error :(\n${err}`))
    }

    deleteUser = (id) => {
     fetch(`/api/users/${id}` , {
            method: 'delete',
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then(result => result.json())
        .then(result => {
        if (result.status === 'error') throw new Error(result.error)
        alert(`Todo salió bien! :)\n El usuario se borro del db!`)
        window.location.reload()
        
    })
    .catch(err => alert(`Ocurrió un error :(\n${err}`))
    }
</script>
